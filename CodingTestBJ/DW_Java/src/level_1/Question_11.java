package level_1;

import java.util.Scanner;

public class Question_11 {

	public static void main(String[] args) {
		/*
		 * 			4 7 2
		 * 		X 	3 8 5
		 * ------------------
		 * 			2360
		 * 		   3776
		 * 		  1416
		 * ------------------
		 * 1 8 1 7 2 0
		 * 
		 * (1)과 (2)위치에 들어갈 세 자리 자연수가 주어질 때 (3), (4), (5), (6)위치에 들어갈 값을 구하는 프로그램을 작성하시오.
		 * 
		 * 입력: 첫째 줄에 (1)의 위치에 들어갈 세 자리 자연수가, 둘째 줄에 (2)의 위치에 들어갈 세자리 자연수가 주어진다.
		 * 출력: 첫째 줄부터 넷째 줄까지 차례대로 (3), (4), (5), (6)에 들어갈 값을 출력한다.
		 * 
		 */
		
        Scanner sc = new Scanner(System.in);
        
        int a = sc.nextInt();
        int b = sc.nextInt();
        
        System.out.println(a*(b%10));
        System.out.println(a*(b%100/10));
        System.out.println(a*(b/100));
        System.out.println(a*b);
        
        //수학에 약한 내가 가장 오래 걸리고 결국 구글링을 통해 풀이와 동시에 이해를 한 문제
        //수학적 접근을 못해서 너무 오래걸린 문제였다.
        //https://st-lab.tistory.com/20 구글링을 통해 알아 본 문제의 풀이 및 출처
        //곱하기 문제 자체는 간단하나 a와 b를 입력받고 (3자리의 정수) 우리가 흔히 수학 문제를 풀듯이
        //472x5 472x8 472x3 일의자리는 따로 더함이 없고, 10의자리는 따로 적진 않지만 일의자리보다 한자리를 앞으로하고 맨 뒤의 일의자리를 0
        //마찬가지로 100의자리도 십의자리보다 한자리 앞으로하고 십의자리와 일의자리를 0으로 채운다.
        //다들 하는 수학 곱하기 방법인데
        //이걸 출력문으로 어떤식으로 접근해야할지 모르겠어서 한참 고민했다가 결국 구글링을 통해 이해했다
        //방법은 두번째로 입력받은 정수에 모듈러를 통해 소수점을 제외한 정수만을 가져오는 방식이였다.
        //일의자리는 %10, 십의자리는 %100(일의자리보다 1자리수 높게,)/10(일의자리처럼 10으로 나눠서 소수점을 제외한 십의자리 정수를 가져온다)
        //백의자리는 그냥 /100으로 백의자리만 가져오게끔 하여 a를 곱하면 되는 문제였다.
        // 1000의 자리의 정수 x 1000의 자리의 정수는 응용문제로 스스로 풀어봤는데
        // 방법은 동일하다. 자릿수가 한개 추가됐으므로 세번째 계산식때 두번째 계산식에서 0을 더해주는것이다. 천의자리는 동일하게 1000을 나누면 되는거고.
        // 10000도 동일하게 네번째 자릿수 계산식때 세번째 계산식에서 0을 더해주면 된다
	}

}
